plugins {
    id 'com.epages.restdocs-api-spec' version "0.19.2"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    // db
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'
    // restdocs & openapi
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.19.2'
}

compileJava {
    dependsOn 'clean'
}

openapi3 {
    servers = [
            {
                url = 'http://localhost:8080'
            }
    ]
    title = 'USER API'
    description = ''
    version = '1.0.0'
    format = 'json'
}

tasks.register('setDocs') {
    dependsOn 'openapi3'
    doLast {
        copy {
            from "build/api-spec"
            include "*.json"
            include "*.yaml"
            into "build/resources/main/static/springdoc"
            rename { String fileName ->
                if (fileName.endsWith('.json')) {
                    return fileName.replace('.json', '-user-service.json')
                } else if (fileName.endsWith('.yaml')) {
                    return fileName.replace('.yaml', '-user-service.yml')
                }
                return fileName
            }
        }
    }
}

bootRun {
    dependsOn 'setDocs'
}

bootJar {
    dependsOn 'setDocs'
}